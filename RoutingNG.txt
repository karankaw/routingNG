ng new routing-demo
-----------------------------------------------------------
ng generate --help
Available Schematics:
  Collection "@schematics/angular" (default):
    app-shell
    application
    class
    component
    directive
    enum
    guard
    interceptor
    interface
    library
    module
    pipe
    resolver
    service
    service-worker
    web-worker
-----------------------------------------------------------
https://stackoverflow.com/questions/41354755/what-is-the-best-way-to-delete-a-component-with-cli
To remove component do it manually
-----------------------------------------------------------
Add component to angular
It creates html, ts, css, spec.ts, app.module.ts (Root App)
INDCORP+703250313@BMBW738Y2 MINGW64 /c/IEF/routingNG/routing-demo (develop)
$ ng generate component foo
CREATE src/app/foo/foo.component.html (18 bytes)
CREATE src/app/foo/foo.component.spec.ts (605 bytes)
CREATE src/app/foo/foo.component.ts (263 bytes)
CREATE src/app/foo/foo.component.css (0 bytes)
UPDATE src/app/app.module.ts (384 bytes)
-----------------------------------------------------------
https://www.w3schools.com/tags/tag_base.asp
The <base> tag specifies the base URL and/or target for all relative URLs in a document.
<head>
<base href="">
</head>
-----------------------------------------------------------
How to add routing module in new Angular proj
ng new NewAppName --routing
-----------------------------------------------------------
https://roytuts.com/how-to-add-routes-to-existing-angular-project/
Sometimes we don't know whether we want to add routing yet, so we say no. 
What do we do, though, if we decide to add routing later? 
	
-----------------------------------------------------------
src/app/
app.component.ts
                            .html
							.css
							.spec.ts
app.module.ts

app-routing.module.ts
-----------------------------------------------------------
https://angular.io/cli/generate#module-command
module
ng generate module <name> [options]
ng g module <name> [options]
Creates a new generic NgModule definition in the given or default project.

--module	
The declaring NgModule.
Aliases: -m
--module=app tells the CLI to register it in the imports array of the AppModule.

--routing	
Create a routing module within new module as well.

-----------------------------------------------------------
ng generate module app-routing
It creates a new module  in separate folder
-----------------------------------------------------------
ng generate module app-routing --flat
It creates a new module  in existing project 
-----------------------------------------------------------
$ ng generate module app-routing --flat --module=app
CREATE src/app/app-routing.module.ts (196 bytes)
UPDATE src/app/app.module.ts (410 bytes)
-----------------------------------------------------------
ng add vs npm install
https://stackoverflow.com/questions/50169680/difference-between-ng-add-package-name-vs-npm-install-package-name-in-angula/50169764#50169764

ng add - does npm install and adds scripts[] in angular.json
ng add
Will use your package manager to download new dependencies and invoke an installation script which can update your project with configuration changes (In angular.json file as well), add additional dependencies (e.g. polyfills if needed), or scaffold package-specific initialization code.

For example you run the command ng add @angular/material — Install, it will automatically install the package and configure in angular.json file too.
npm install
Whereas npm install <package> will only install your package into your project but will not configure in order to use.

For example you run the command npm install jquery it will install jQuery in your project but you need to configure manually in .angular-cli.json file (as in v5)
For more information read out here -

https://blog.angular.io/version-6-of-angular-now-available-cc56b0efa7a4
-----------------------------------------------------------
In Angular 6 + , angular-cli.json became angular.json
-----------------------------------------------------------